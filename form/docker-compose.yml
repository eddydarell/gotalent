version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - NODE_ENV=production
    volumes:
      - ./server/data:/app/data
    restart: unless-stopped
    networks:
      - app-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Reverse Proxy (Caddy)
  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Database viewer (Adminer)
  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=sqlite
    volumes:
      - ./server/data:/var/www/html/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  caddy_data:
  caddy_config:

networks:
  app-network:
    driver: bridge
